 1-1
环境搭建/数据库及接口/项目初始化/用户模块/分类模块/商品模块/购物车模块/收货地址模块/
支付模块（沙箱环境）/订单模块/云服务器发布/总结与展望

1-2 课程学习与解决问题指南
开放前台 test.happymmall.com
开放后台 admintest.happymmall.com
	用户名 admin
	密码 admin
相关课程
	geely慕课网首页
	SprintMVC数据绑定
	该项目
	课程软件及配置 learning.happymmall.com
善用问答区
手记推荐
	大型项目架构演进过程及思考的点
	找工作的季节之简历及找工作的分享
	一期项目思维导图、知识点索引
	一期课程问答FAQ
	一期课程QQ群分享手记
大型java项目架构演进解析
	80%的业务访问集中在20%的数据上，因此给数据设置缓存就不用每次都去访问数据库
	缓存分为本地缓存、远程缓存（又包括单一式缓存和分布式缓存）
	负载均衡

linux软件源配置与学习建议
	阿里云源配置官网：http://mirrors.aliyun.com
	
基础：http://www.imooc.com/learn/122

linux软件源配置实操
	在阿里云源配置官网找到ubuntu：替换/etc/apt/sources.list中的http://  archive.ubuntu.com/ 为 mirrors.aliyun.com

Tomcat安装
	Tomcat是一个WEB容器，JavaEE可以在此运行
	web容器用来管理servlet程序，当用户点击一个URl指向一个servlet而不是静态页面，容器会识别出请求索要的是servlet对象，此时会创建httpservletrequest以及httpservletrespons两个对象，同时容器根据请求中的url找到对应servlet，为这个请求创建或分配一个线程，并把生成的两个对象传递到servlet线程中；容器再调用servlet的service()方法，根据请求的不同类型，service方法调用doGet或doPost方法，方法生成动态页面后把页面填入response对象里，此时容器仍然有response对象的引用。线程结束，容器把response对象转换为http响应，传回用户，并销毁request和response对象
	安装tomcat无论使用-zxvf还是-xvf都报错：因为文件损坏，官网重下
	为用户配置环境变量：与maven类似，在.bash_profile文件中增加CATALINA_HOME路径，然后source .bash_profile进行更新
	然后配置UTF-8字符集：修改conf文件夹下的server.xml，在端口为8080的connector中加入URIEncoding='UTF-8'
	当在本机启动tomcat后（去目录里执行sudo ./startup.sh），本机就是一个服务器，其他的主机也可以连接到这个服务器，地址就是ifconfig中的ip地址

vsftpd文件服务器安装与配置讲解
	vsftpd ‘very secure FTP daemon’是一个完全免费的、开放源代码的ftp服务器软件
	FTP文件传输协议：基于该协议FTP客户端与服务端可以实现共享文件、上传文件、下载文件
	执行yum命令没有yum选项，sudo apt install yum 失败error，于是更新sudo apt-get update 即可
	sudo apt-get install vsftpd安装好后，创建虚拟用户：
		useradd：ftpuser
		修改权限
		设置密码：passwd ftpuser 为123456
		配置访问文件夹的权限 sudo chmod 777 /ftp/ftpuser
		把新增加的用户放入用户配置文件中
		修改vsftpd配置文件
			没有修改，但是视频里修改了pasv模式（被动模式）
		配置防火墙文件：先开启防火墙 ufw enable
				设置防火墙开放端口 ufw allow 21
	出现一堆问题且ftp connection refused：remove vsftpd并重新安装，使用原配置文件不进行修改
	FTP协议有两种工作模式：PORT方式和PASV方式，即主动式和被动式
		1.主动式的连接过程是：客户端向服务器的FTP端口（默认是21）发送连接请求，服务器接受连接，建立一条命令链路
		当需要传送数据时，客户端在命令链路上用PORT命令告诉服务器：“我打开了xxx端口，你过来连接我”，于是服务器从20端口向客户端的xxx端口发送连接请求，建立一条数据链路来传送数据
		2.被动式的连接过程是：客户端向服务器的ftp端口发送连接请求，服务器接受连接，建立一条命令链路
		当需要传送数据时，服务器在命令链路上用PASV命令告诉客户端：“我打开了xxx端口，你来连接我”，于是客户端向服务器的xxx端口发送连接请求，建立一条数据链路来传送数据
		（所以，主动跟被动的区别在于服务器是主动连接还是被动被客户端连接）
	问题：防火墙的配置问题	


Nginx反向代理服务器安装与配置讲解
	Nginx 一款轻量级Web服务器，也是一款反向代理服务器，也可以作为负载均衡服务器
	反向代理和正向代理：正向代理是用户将请求发送给代理服务器，代理服务器去访问用户想要访问的地址，客户端非常明确自己要访问的服务器地址，而服务器只知道请求来自于哪个代理服务器，不清楚具体来自哪个客户端（正向代理屏蔽了真实客户端信息）。反向代理服务器对于客户端来说，就像是一个直接的服务器，在分布式部署的服务器中，多个客户端给服务器发送的请求被反向代理服务器按照一定的规则分发给了后端的业务处理服务器，但是对于用户看来，它只知道自己的请求被反向代理服务器处理了，而不知道后面的分发过程。
	安装gcc，pcre，zlib，openssl，都是Nginx依赖
	下载nginx tar.gz包并解压，进入目录执行./configure，make，make install
	Nginx常用命令：测试配置文件 nginx默认安装目录 /usr/local/nginx
			去往nginx下的sbin下执行./nginx -t
			启动命令 在sbin目录下执行sudo ./nginx
			停止命令 在sbin目录下执行nginx -s stop或nginx -s quit
			restart命令 在sbin目录下 nginx -s reload
			查看进程命令 ps -ef |grep nginx会得到进程占用的PID
			平滑重启 kill -HUP +【前面得到的PID】：主要是当nginx收到HUP命令，会检查配置文件，如果出现新的配置文件，就按新的配置文件进行工作；然后关闭nginx进程（使用quit命令），若存在用户刚发出请求而未得到nginx响应，进程推迟关闭直到所有客户端的请求响应完毕；若新的配置文件测试失败，则nginx继续以旧的配置文件进行工作 
	nginx默认端口80
	配置虚拟域名：因为是访问本机地址而不是真实的域名，两种配置：目录转发和端口转发 （一个是域名转到目录上，一个是域名转到一个http页面加端口上）
	Nginx本地玩耍注意事项：配置域名转发后请一定要配置host，不然无法生效

nginx反向代理服务器域名解析配置实操
	首先是修改/etc/hosts文件，把本机地址映射到www.imooc.com上，然后在nginx的conf目录下，新建一个vhost，把这个文件夹下的.conf文件都include到conf目录下的nginx.conf文件中，在vhost中新建一个对应www.imooc.com的一个conf文件，并进行配置（在learning.happymmall.com/nginx/vhost中）
	listen：监听端口
	server_name：就是用户访问的域名
	access_log：不输入时默认载入顺序
	location
	{
		proxy_pass 如http://127.0.0.1:8080 tomcat服务器
		xxx
	}
	以上的一个执行顺序是：服务器监听80端口，当接收到一个server_name中的域名时，转向location中的http地址和端口（这就是域名转到http页面的方式）

	另一种是nginx转到线上（本机？）的一个文件夹，和上面配置的唯一的不同就是location 使用root关键字,使用这种方法时，两个问题：1.页面一开始就403 forbidden，修改.conf文件中的user root也没用，后查到是因为目录文件夹下没有配置的默认文件，默认文件在nginx.conf的index里，所以解决办法：创建一个index.html文件即可访问文件 2.1解决了之后，仍然无法看到nginx主页，只是一个空白页面，但是其下的子目录却能看到目录列表（为什么？因为访问时第一个显示的页面就是文件夹下的index.html，而此时的index.html为null，故是一个空白页面）
linux删除文件夹命令 rm -rf /ccc/xxx 会删除xxx目录及其下的所有文件、文件夹
		rm -f /xx/xx/cc.txt 删除文件
		-r是向下递归，不管有多少级命令，一并删除
		-f是直接强行删除，不作任何提示
		-i进行交互式删除

nginx反向代理服务器域名解析配置细节补充-autoindex
	当代理服务器使用域名转到目录时，nginx默认不允许列出整个目录，若要看到目录下的其他子目录等，就要在conf文件中配置autoindex on	

文件服务器搭建及原理讲解
	首先为什么需要文件服务器，比如说一个nginx连接着两个tomcat服务器，A中存放了用户想要的图片而B中没有（如果每个服务器都存放一模一样的资源会造成极大的浪费），当用户的请求被转向了A，用户能获得自己想要的东西，若用户的请求按规则被转向了B，用户就不能得到自己想要的文件，因此建立一个文件服务器，不管用户的请求被发到B还是A，服务器都会从文件服务器中获得资源并返回给用户。同理session服务器也是，它存储着用户的登录信息。 

Mysql数据库安装与配置讲解
	MySQL简介：MySQL是一个关系型数据库管理系统，使用SQL语言是访问数据库的最常用标准化语言，体积小速度快，适用于中小型网站
	MySQL安装：sudo apt-get install mysql-server
		sudo apt install mysql-client
		sudo apt install libmysqlclient-dev 
	root用户密码123456 端口3306 
	启动 service mysql start 停止 service mysql stop
	登录 mysql -u root -p密码
	查看用户 select user,host,password from mysql.user
	插入用户 grant all *.* on ty@localhost identified by "123456";
		所有权限 ty
	新建database CREATE database 数据库名称;
		访问数据库 use 数据库名称;
		查看表命令 show tables;
		设置权限grant all privileges on *.* to mmall@"%" identified by "123456" with grant option; %表示所有网络地址，*.*表示所有操作权限
	新版的sql没有按照之前的insert into创建用户，而是按照上面的方式
	dql-select dml-insert update delete ddl-create table create view dcl-grant 
	学习建议 http://www.imooc.com/learning/122

git版本控制工具安装与配置讲解
	配置用户名（提交时会引用）
		git config --global user.name "bumblebeehub"
	配置邮箱（提交时会引用）
		git config --global user.email "987507504@qq.com"
	让git忽略windows/unix换行符转换的事
		git config --global core.autocrlf false
	避免git gui中的中文乱码
		git config gui.encoding utf-8
	避免git status显示的中文文件名乱码
		git config --global core.quotepath off
	切换分支
		git checkout 分支名 

第三章 数据表结构设计（表结构，表关系，索引，时间戳）
数据表结构设计（自己能不能想到这么多结构和信息，如果是自己写应该怎么写）
		用户表mmall_user
		分类表mmall_category
		产品表mmall_product
			price 标签 使用decimal类型 decimal(20,2)，表明价格单位是元，保留两位小数，说明有20-2位整数
		购物车表mmall_cart
		支付信息表mmall_pey_info 线上支付的所有交易信息
		订单表mmall_order
		订单明细表mmall_order_item
		收货地址表mmall_shipping

数据表关系设计
	注册信息存放到用户表，搜索商品会用到分类表和产品表，当添加到购物车时，用到购物车表；在购物车中选中物品结算时，会跳转到订单确认页，用到收货地址表，生成订单后，用到订单表和订单明细表（一个order表会对应多个订单明细表），得到订单号，付款时用到支付信息表

数据表索引与时间戳讲解
	唯一索引unique，保证数据的唯一性：username，ordernumber等单索引
					（username，ordernumber）组成双索引
	时间戳 查业务问题的后悔药，
		create_time:数据创建的时间
		update_time:数据更新的时间，最新的一次更新时间

第四章 项目初始化
项目初始化概要
	数据库初始化 使用navicat下载mmall.sql，使用mmall.sql
数据库初始化
	使用navicat，新建一个database mmall_learning,然后新建query，把慕课网上源码中的mmall.sql中的内容复制并编译，就会得到所有的数据表结构

idea项目开发工具安装实操
	安装idea时出现initializeerror，可能是idea版本过低，jdk1.8下载了idea2017正常启动
	
jdk、tomcat、maven配置及初始化web空白项目
	在idea初始界面配置jdk路径以及maven路径，然后新建maven-webapp项目，配置Tomcat目录，启动tomcat即可在浏览器访问：
	问题百出，首先是无法建立artifact，参考网上的各种方法后仍未解决，包括修改了catalina.bat文件中的java_opt以及idea中的java_opt选项后在项目问答区找到解答，参照https://coding.imooc.com/learn/questiondetail/21132.html，注意要配置后index.jsp应该在web目录下而不是原来的web-app下，否则无法找到

git初始化
	版本库又叫仓库，其实就是一个目录，这个目录里面的所有文件都可以被git进行管理：创建一个版本库很简单，在一个空白的地方新建一个文件夹，在这个目录下执行git init命令，git就会瞬间把仓库建好，你能看到一个.git/文件。在新建文件提交的时候，git add可以多次执行，然后执行一次git commit命令即可。
	git时光穿梭
		git内部有一个HEAD指针，用于指向当前版本，git允许在版本的历史间来回穿梭，使用命令git reset --hard commit_id
		在穿梭前，使用git log可以查看提交历史，以便确定回退到哪个版本
		要重返未来，用git reflog查看历史命令，以便确定去往未来哪个版本
	首先产生readme.md文件和.gitignore文件，表示在提交的时候忽略这个配置里面的文件
	分支开发，主干发布
	当使用git时，每次push都要求输入用户名和密码：后经发现因为自己复制仓库地址的时候复制成了http地址，所以使用了http协议，重新复制项目地址为ssh地址
	一开始对新建目录进行git push的时候出现更新被拒绝的错误，强制push
	将所有文件进行添加， git add .
	git常用命令
		查看远程分支 git branch -a 查看本地分支 git branch
		创建分支 git branch xx名
		切换分支 git checkout xx分支（v1.0 origi/master 在master下创建分支v1.0）
		推送分支 git push origin HEAD -u
		连接远程仓库 git remote add origin git@xxxx

项目包结构初始化
	com.mmall.controller
		.dao
		.service(dao层在最下面跟db交互，上面是service层，再上面是controller层)
		.util 工具类
		.vo view object或value object
		.pojo 简单的数据库对象，通过vo进行封装发给controller，再发给前端，有时也是用bo进行封装
		.common 常量和全局异常公共类
		
mybatis三剑客之mybatis-generator配置
	首先了解一下mybatis，mybatis是一个持久层框架，持久层也就是上面说的dao层，负责跟数据库进行交互。它可以建立数据库表和系统中的对象的一对一映射关系。这种框架我们称之为orm（object-relationship-mapping）框架。但是mybatis框架需要自己写sql语句，且不能像hibernate那样自动生成sql语句，并且建立实体类和数据库的映射。所以我们说它是不完全的orm框架。映射这个词是这样的：假设数据库中有一个user表，里面的字段有name，id，birthday等，表中有一条数据，而在系统中，也应该存在一个将这些字段存为属性的类，这个表中的数据，对应系统中的代码的话，应该是一个user对象，这个对象中的各个属性的值即为表中的那一条数据。而框架通过我们的配置，将这个表中的记录和这个类的对象建立一对一的关系。我们称之为映射。这样的映射建立之后，我们可以通过操作这个对象实现对数据库的修改。
	在执行datasource properties配置时，首先是出现错误access denied，检查后发现是因为ip地址没有写自己的ip地址，但是将地址修改为10.112.122.157后仍然出错，报错为communication link failure，后将ip地址修改为localhost后争取。在此要了解，127.0.0.1和localhost和本机ip三者的关系：
	环回地址是主机用于向自身发送通信的一个特殊地址，同一台主机上的两项服务若使用环回地址来进行处理，就不用经过协议栈的下层了，可以直接在网络层，运输层进行处理，在ipv4中，127.0.0.0到127.255.255.255都是环回地址（这些地址根本就不是一个网络地址，因为产生的ip数据包不会到达网络中，不会离开本机），当ip层收到目的地址为127.0.0.1时，不调用网卡驱动进行二次封装，而是立即转发到本机ip层进行处理，因此ping 127.0.0.1经常作为测试本机tcp/ip协议栈是否正常的判断之一。
	而localhost，首先是一个域名（类似于www.baidu.com），也是本机地址，它可以被hosts文件设定为指向任何的ip地址，通常在ipv4中，localhost指向127.0.0.1。


关于MVC知识：MVC即模型model 视图view 控制器controller的缩写。用一种业务逻辑、数据、界面显示分离的方法组织代码。SSH和SSM就是两种常用的企业级MVC开源框架，ssh通常是有struts2做控制器，spring管理各层组件，hibernate负责持久化层；ssm则是springmvc做控制器，spring管理各层组件，mybatis负责持久化层


mybatis三剑客之mybatis-generator生成数据对象和时间戳优化
	执行mybatis generator之后，生成dao层包（是接口，供service层使用，实现是在后面的xml里）和pojo包，以及mappers里的一堆xml文件，后对这些xml文件中的时间戳进行修改。每个表里都有create time 和update time，这两个字段很有用，可是在进行业务逻辑的书写的时候，不想要交给代码去实现，会很麻烦，想交给db去完成，因此把里面的CREATE time 和update time在插入时修改为now(),这是sql里面的内置函数，在update的时候把update time修改为now()即可

mybatis三剑客之mybatis-plugin讲解
	就是一个插件，名字就叫mybatis plugin，插入后可以从mapper跳转到对应的xml文件中
	
mybatis三剑客之mybatis-pagehelper分页插件讲解
	就是一个分页插件--

spring官方demo指引及配置
	配置都是从官方获取

spring、springmvc配置实操
logback配置讲解
ftp服务器配置讲解
idea的注入和自动编译配置
项目初始化代码提交
两个提高工作效率的神器-reslet client和fe助手


终于开始写业务代码了

用户模块开发概要与接口设计讲解
	用户模块
	功能介绍
		登录
		用户名验证
		注册
		忘记密码
		提交问题答案
		重置密码
		获取用户信息
		更新用户信息
		退出登录
	学习目标
		横纵向越权安全漏洞：
		横向越权：攻击者尝试访问与他拥有相同权限的用户的资源
		纵向越权：低级别的用户尝试访问高级别用户的资源（如普通用户尝试获得管理员的资源）
		高复用服务响应对象的设计思想及抽象封装
			用户模块是建立的第一个模块，里面的很多对象在以后的模块中都会被使用到，这个就是高复用的意思，将对象进行封装后以后的模块都可以直接进行使用
		mybatis-plugin使用技巧
		数据表设计
		接口设计
			https://gitee.com/imooccode/happymmallwiki/wikis/%E9%97%A8%E6%88%B7_%E7%94%A8%E6%88%B7%E6%8E%A5%E5%8F%A3?sort_id=9917
			前台门户_用户中在忘记密码后，有一个提交问题答案的过程，当正确回答问题后会有一个token值返回，为什么需要这个token值呢？这个token用于下一步重置密码中，如果在重置密码的过程中不提交这个token值，就会发生一个典型的横向越权的问题：某一个恶意用户不需要知道问题答案，就可以直接将属于某个用户的密码修改，只有当token在有效时间内和用户名及新密码一起提交，才可以得到修改密码的正确响应。	
		

登录功能开发
	！！！需要了解userController、userService、userMapper之间的关系，谁调用谁，怎么调用，为什么这么调用
	需要了解spring mvc中的controller，model和view是如何工作的，在这里，controller调用service，service调用dao层中的mapper

登出、注册、校验功能开发
	登出功能，直接将用户从session中除掉即可session.removeAttribute
	注册功能：首先判断用户名是不是已存在，需要用到dao层的userMapper，然后检查email是否存在；给用户设定一个角色（角色分为客户和管理员），给用户的密码加密，将用户插入到数据库中，插入成功，返回注册成功，插入失败返回注册失败
	校验功能：前端的一个实时校验，输入数据是否格式正确
		其中用到了String.Utils中的isEmpty和isBlank方法，两者区别在于后者认为一个空格字符串“ ”也算blank


获取用户登陆信息，忘记密码，提示问题与答案，重置密码功能开发
	校验提示问题与答案时，本地缓存了一个token，并设置有效期，这个token给忘记密码的修改密码指定了有效期，可以防止信息被恶意泄露被修改密码，如果没有token，仅仅知道用户名，调用修改密码的接口，就可以传一个新密码进行密码的修改。
	问题是这个token是如何确定要修改的密码的这个人是

忘记密码中的重置密码功能开发
	StringUtils的方法中有一个equals方法，可以避免出现a.equals("abc")当a为null时报出空指针的错误
	重置密码时，只有当参数中的token与缓存中的token一致，才可以进行修改


登录状态下重置密码功能开发
	就是匹配一下userId与用户密码是不是对应，若对应再修改

更新用户个人信息功能开发
	校验用户是否登录，校验email是不是属于别的用户，然后就是set新的信息

获取用户详细信息功能开发及MD5加密补充
	MD5加密很容易用穷举法破解出来，自己在MD5的基础上加上一些自己的片段，能增加被破解的难度


用户模块所有功能测试
	首先测试登录模块login.do：开始出现500错误，重启tomcat后成功，后验证密码时出现密码错误，是因为自己在使用MD5加密时没有按照教程中的加密过程进行，因此密码不匹配，修改后再次send请求还是错误，重启tomcat，问题解决。
	测试register.do：包括测试用户名是否已存在，邮箱是否已存在
	测试check_valid.do：测试用户名和邮箱是否可用，在教程的基础上增加非空的判断
	测试获取用户登录信息get_user_info.do：测试是否能够返回当前登录用户的信息，无需传参数，session中获取用户信息。
	测试忘记密码（非登录状态下）功能forget_get_question.do：得到问题
	测试忘记密码问题的答案是否正确forget_check_answer:测试时出现500错误，重启服务器也没有用，后来发现是xml文件中注释的问题，不能使用--来单行注释，只能使用/**/来注释,若正确，则返回一个token,用于下一步作为重置密码的输入之一
	测试忘记密码情况下重置密码forget_reset_password：问题，在测试的时候，如果一开始我传入了正确的token，返回信息是正确的“重置密码成功”，但是，当我接着传入一个错误的token进行测试时，返回信息为“修改密码失败”，如果按照代码逻辑来理解，为什么没有进入图中的if语句从而返回“token错误，请重新获取token”呢？难道此时的forgettoken不等于token？
	测试登录状态下重置密码reset_password
	测试登录状态更新个人信息update_information
	测试获取当前登录用户的详细信息，并强制登录get_information（其实没有强制登录，只是返回告诉我们需要登录）
	测试退出登录
	

分类管理模块开发

分类管理模块开发概要与接口设计讲解
	学习目标：如何设计及封装无限层级的树状数据结构
		递归算法的设计思想
		如何处理复杂对象排重
		重写hashcode和equal方法
	节点就是种类，新节点就是新种类
	分类管理的四个接口：
		1.获取品类子节点（平级）：下一层的所有子节点，不递归
		2.增加节点
		3.修改品类的名字
		4.获取当前分类id及递归子节点categoryId

添加分类和更新分类名字功能开发
	问题：什么时候需要使用service，什么时候可以直接在controller中进行代码的编写
		当要用到pojo层的东西也即要使用数据库里的东西时，需要利用service来操作dao的东西
	
查询节点和递归查找功能开发
	查询节点比较简单，就是在数据库中查找，没什么多说的
	两个对象比较，当使用equals方法两者相等时，两者有相同的hashcode值，而当两者有相同的hashcode值时，两个对象使用equals方法比较却不一定相等
	递归查找功能:由于我们想要递归出所有的品类而不希望有重复的品类出现，因此我们使用set来存储品类，同时，由于品类是自己写的类，因此我们要重写equals方法和hashcode方法。在递归函数中，本次添加得到的set作为下一次递归的输入。最后返回的是categoryId的list，因此遍历set将其中的categoryItem的id依次添加即可。

分类管理模块所有功能自测


商品管理模块开发概要与接口设计讲解
	前台功能：产品搜索、动态排序列表、商品详情
	后台功能：商品列表、商品搜索、图片上传、富文本上传（？）、商品详情、商品上下架等
	富文本（Rich Text Format一般简称RTF），是一种类似于DOC格式的文件，有很好的兼容性，比text文本优势在于可以保存字体大小、格式、排版等，比普通文本实现起来更复杂但是读起来更好看

后台商品新增、保存、更新、上下架功能开发
	问题：新增产品和更新产品的地方，为什么用getId来判断是更新还是新增，如果id不为空就是新增的话，那么这个新增的产品不就没有id了吗？
	答案：数据表结构在设计的时候把主码（id）设为自增的状态，要是新增数据没有id也能插入成功
	上下架的功能其实就是更新产品的状态


!!!要充分了解spring MVC的原理 还有去查一下spring boot
后台获取商品详情功能开发及ProperitiesUtil配置工具，DateTimeUtil时间处理工具开发
	赶紧去把vo bo pojo等等内容看懂了
	静态代码块执行顺序先于普通代码块，普通代码块执行顺序先于构造代码块

后台商品列表动态分页功能开发
	比较复杂，用到了mybatis的pagehelper来对商品列表进行自动分页，且在返回productList的时候，里面装的不是完整的product，而是修改后的productListVo，专门用来添加到列表进行返回的，跟productDetailVo一样的用法；pageHelper的包括了startPage、自己填充的sql语句也即跟mapper打交道的部分、pageHelper的收尾语句（PageInfo xx = new PageInfo（list））；

后台商品搜索功能开发
	后台搜索时也需要分页功能，所以pageNum，pageSize均是参数
	在搜索时，有两个参数，productName和productId，sql语句中，要求和productName的关系是 name like #{productName}而不是name = #{productName},且id = #{productId}，这就要考虑到当二者其一为空时怎么sql怎么选择，如果使用if标签
	<if test="productName != null">
        and name LIKE #{productName}
      </if>

      <if test="productId != null">
        and id = #{productId}
      </if>
	会在productName不会空时出现where 后面紧跟and name like xxx的情况，因此，把if语句放入where标签，它会自动删除遇到的第一个and/or
	<where>
      <if test="productName != null">
        and name LIKE #{productName}
      </if>

      <if test="productId != null">
        and id = #{productId}
      </if>

    </where>

后台商品图片的springMVC上传与富文本上传ftp服务器功能开发1
	servlet的上下文怎么理解？
	path又是什么path？
	upload逻辑里面生成的fileDir是在服务器上生成还是本地？  tomcat服务器上的文件夹，实际上就是本机
	ftp服务器在linux系统下就是文件夹，所以上传文件的业务逻辑里有一个参数是remotePath
	ftpClient开启被动模式什么意思？

后台商品图片的springMVC上传与富文本上传ftp服务器功能开发2
	写完后在index.jsp文件中新建表单进行测试，注意的是表单标签里要有enctype=multipart/form-data
	simditor，副文本编辑器
	富文本到底用来干嘛的？它的上传跟普通上传有什么区别？前端的插件对后端的返回都是有要求的，修改response的header从哪里知道的？（只针对simditor富文本插件）
	测试的时候，上传成功并返回图片地址，直接在ftp服务器上发现看不见文件，检查发现图片已上传到tomcat服务器，但是并没有上传到ftp服务器。后发现是vsftpd的配置问题，重新按照网上的配置，记得开启被动模式！然后能够上传，但是仍然存在问题：upload下始终只有一个文件。
至此，后台商品的上传已经结束


前台商品详情，列表，搜索，动态功能排序
	当参数不是必须要传的时候，使用RequestParam注解，给它们设定一个defaultValue
	pageHelper，pageInfo怎么用，好好看看productmapper中怎么得到List
	前台搜索出来的商品，当商品状态为2的时候，不会将该商品添加到商品列表里，而后台的商品列表是所有的都添加

商品管理模块所有功能自测
	前台和后台的测试都是一样的，直接访问接口


购物车模块开发概要与接口设计讲解
	功能介绍：加入产品，更新产品书，查询商品数，移除商品，单选取消等
	学习目标：
		购物车模块的设计思想
		如何封装一个高复用购物车核心方法
		解决浮点型商业运算中丢失精度的问题

加入购物车功能开发1
	购物车中最后一个limitQuantity，用于限制商品个数，比如说总库存只有10个，就不能往购物车中加入11个
	根据用户id来获取购物车时，返回一个List？一个用户不应该只有一个购物车吗？

加入购物车功能开发2
	精度丢失的问题：使用string的BigDecimal来解决BigDecimal b1 = new BigDecimal("0.05")等，比如在计算商品总价的时候，明明0.05+0.01是0.06,但是直接相加会出现精度的错误结果为0.060000000000000005，这样用户明明有6分钱，却没有办法购买！！所以在商业计算价格中，一定要用BigDecimal的string构造器！！！！

更新、删除购物车商品功能开发
	CartVo和CartProductVo的用处分别是什么？
	数据库里set多个值的时候一定要用逗号分割
		set checked = #{checked},
    		update_time = now()
    		where user_id = #{userId}

全选、全反选、单个商品选中、单个反选，查询购物车总数
	在sql中统计购物车总的商品数量时，如果使用
		    SELECT sum(quantity) as count from mmall_cart WHERE user_id = #{userId}，这样当userId不存在时，返回结果为null，不符合CartMapper中的返回值int类型，因此有两种改法：1.将cartMapper中的返回值改为Integer
	2.修改sql语句为SELECT IFNULL(sum(quantity),0) as count from mmall_cart WHERE user_id = #{userId}


购物车模块所有功能自测
	已完成

收货地址管理模块开发概要及接口设计讲解
	添加地址、删除地址、更新地址、地址列表、分页、详情等
	学习目标：SpringMVC数据绑定中对象绑定
		mybatis自动生成主键、配置和使用
		如何避免横向越权漏洞的巩固
	
收货地址增，删，改，查，分页列表，地址详情功能开发
	在更新地址的时候，当传递参数为Shipping类型时，在数据库中parameterType就为这个类<update id="updateByShipping" parameterType="com.mmall.pojo.Shipping">，更新的时候，userId不能修改，只能作为一个判断条件。（因为userId本来就不能修改）

收货地址管理模块所有功能自测
	在测试list.do的时候，为什么PageInfo pageInfo = new PageInfo(shippingList)可以得到正确结果，而PageInfo pageInfo = new PageInfo();pageInfo.setList(shippingList);结果不对？

支付模块开发概要与接口设计讲解
	功能介绍：支付宝对接，支付回调，查询支付状态等
	熟悉支付宝对接核心文档，调通支付宝功能官方demo
	RSA1和RSA2验证签名及加密

支付宝支付功能对接要点讲解（知识点补充）
	一些重要文档
	沙箱调试环境：蚂蚁沙箱环境（Beta）是协助开发者进行接口功能开发及主要功能联调的辅助环境，沙箱环境模拟了开放平台部分产品的主要功能和主要逻辑（参考“沙箱支持产品列表”），为保证沙箱稳定，沙箱环境测试数据会进行定期数据清理，Beta测试阶段每日的21：00到次日的9：00为维护时间，在此时间内沙箱环境部分功能可能会不可用。
	支付宝扫码支付主业务流程
	支付宝扫码支付流程（官方文档中都有）
	支付宝扫码支付重要字段：
		关键入参：out_trade_no 商户订单号，不能重复
			total_amount 订单金额
			subject 订单标题
			store_id 商户门店编号
			timeout_express 交易超时时间
		关键出参 qr_code 订单二维码图片地址
		还有很多比如交易状态、订单金额、付款金额等
	支付宝扫码支付重要细节：	
		主动轮询和回调的区别：主动轮询是设置一定的时间，不断去查询;回调是支付宝自己调用接口，把支付细节通知给我们
		避免单边账
		同步请求的加签和验证签名
		回调验证
		过滤掉重复的通知
		一定要验证并确保可接受的异步通知是支付宝发出的
		回调请求的返回：程序执行完之后必须打印输出success这7个字符，如果商户反馈的不是这7个字符，支付宝服务器会不断重发通知，直到超过24小时22分钟
	支付宝扫码支付对接技巧
		回调的调试方法 
			外网远程debug：保持远端代码版本与本地代码保持一致;及时关闭开放的debug端口
			内网穿透（natapp）：使用这个软件可以产生一个域名，外网可以访问这个域名，效果与直接访问本机ip地址+端口是一样的。

支付宝支付功能重要文档简介（知识点补充）
	用到的时候再看看吧

支付宝支付功能官方demo调试实操1（知识点补充）
	使用文档中所教方法生成商户公钥和私钥，使用openssl方法，下载gz包之后解压，并进入文件夹，命令行输入命令输入sudo openssl，然后按照方法生成公钥和私钥

支付宝支付功能官方demo调试实操2（知识点补充）
	下载natapp，首先申请隧道，得到authtoken，然后给natapp赋予权限chmod a+x natapp,再./natapp -authtoken=xxx打开得到natapp分配的穿透网址，它就是一个可以全球访问的网址啦。主要用于支付宝的回调

支付宝支付功能开发1
	集成支付宝的功能
	maven的配置中有一个compile插件，负责把jar包都一起打包到服务器上
	
支付宝支付功能开发2
	重点是生成二维码并上传到文件服务器上那一步，path怎么用，还有上下文是什么意思？
	targetFile里是一张二维码还是多张二维码

支付宝回调函数实现与支付宝SDK源码解析
	什么是支付宝的回调？
	支付宝的回调都是把参数放在request里面，需要我们自己去提取，提取各个参数后最重要的就是验证，调用SDK里已经有的函数，能够完成验签的功能，但是还需要我们自己完成校验通知数据正确性的功能，也就是文档里的第五步
	StringBuffer是一个线程安全的

支付模块所有功能自测
	完成订单模块开发后再进行测试,现存有一个问题就是qr图片已经上传到ftp服务器上,但是如何将ftp协议转换为http协议访问呢

	
	
查询订单支付状态功能开发
	订单状态和交易状态之间的关系？
	整理一下：支付宝官方文档说，异步通知，是当收银台调用预下单请求API生成二维码展示给用户后，用户通过手机扫描二维码进行支付，支付宝会将该笔订单的变更信息，沿着商户调用预下单请求时所传入的通知地址主动推送给商户。也就是说，回调，是当用户扫描二维码后，支付宝会把接下来的订单的变更信息，返回给用户预先传入的地址，这就是回调，参数就是网址里的https://docs.open.alipay.com/194/103296/
	

订单模块开发概要及接口设计讲解
	
创建订单、清空购物车等功能开发
	前面说过根据用户Id获取购物车的时候,返回的是一个list,那么应该就是每种商品构成了一个购物车
	创建订单，包括要从购物车中选取已经被标记为选中的商品，要为购物车中每一个cartItem构造出一个orderItem并添加到orderItemList中，然后计算价格等

创建订单、清空购物车等功能开发2
	真的麻烦,要为Order创建orderVo, 就要为OrderItem创建OrderItemVo,就要为shipping创建shippingVo

取消订单,获取购物车中商品信息功能开发
	取消订单,就是更新数据库中该订单的状态
	获取购物车中商品信息,就由用户id来获取,用户有多个cart,获取每个cart中被勾选的商品数及其总价格等

前后台订单列表,订单详情,发货功能开发
	

		

	
	
	
	
	
	
		

	
	
	
	
	
	
	

	
	

	

